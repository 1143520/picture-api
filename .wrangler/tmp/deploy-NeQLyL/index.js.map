{
  "version": 3,
  "sources": ["../../../src/index.js"],
  "sourceRoot": "D:\\code\\picture-api\\.wrangler\\tmp\\deploy-NeQLyL",
  "sourcesContent": ["// \u914D\u7F6E\u4F60\u7684\u56FE\u7247 URL \u5217\u8868\nconst IMAGES = [\n  '01.jpg',\n  '02.jpg',\n  '03.jpg',\n  '04.jpg',\n  '05.jpg',\n  '06.jpg',\n  '07.jpg',\n  '08.jpg',\n  '09.jpg',\n  '10.jpg',\n  '11.jpg',\n  '12.jpg',\n  '13.jpg',\n  '14.jpg',\n  '15.jpg',\n  '16.jpg',\n  '17.png',\n  '18.png',\n  '19.png',\n  '20.png',\n  '21.png',\n  '22.png',\n  '23.png',\n  '24.png',\n  '25.png',\n  '26.png',\n  '27.png',\n  '28.png',\n  '29.png',\n  '30.jpeg'\n].map(filename => `https://raw.githubusercontent.com/1143520/picture-api/main/public/${filename}`);\n\n// \u6A21\u5F0F\u63A7\u5236\uFF1A1 = \u987A\u5E8F\u5FAA\u73AF\uFF0C2 = \u4E0D\u91CD\u590D\u968F\u673A\u56FE\u7247\nconst MODE = 2;\n\n// \u8BB0\u5F55\u6700\u8FD1\u663E\u793A\u7684\u56FE\u7247\u7684\u7D22\u5F15\nconst recentIndices = [];\nconst UNIQUE_COUNT = 8; // \u8C03\u6574\u4E3A\u66F4\u5408\u9002\u7684\u6570\u91CF\uFF08\u7EA61/4\u7684\u603B\u56FE\u7247\u6570\uFF09\n\n// \u6A21\u5F0F1\u7684\u5F53\u524D\u7D22\u5F15\nlet currentIndex = 0;\n\n// \u83B7\u53D6\u4E0B\u4E00\u4E2A\u987A\u5E8F\u7D22\u5F15\uFF08\u6A21\u5F0F1\uFF09\nfunction getNextSequentialIndex() {\n  const index = currentIndex;\n  currentIndex = (currentIndex + 1) % IMAGES.length;\n  return index;\n}\n\n// \u83B7\u53D6\u4E00\u4E2A\u4E0D\u5728\u6700\u8FD1\u663E\u793A\u5217\u8868\u4E2D\u7684\u968F\u673A\u7D22\u5F15\uFF08\u6A21\u5F0F2\uFF09\nfunction getUniqueRandomIndex() {\n  let availableIndices = Array.from({ length: IMAGES.length }, (_, i) => i)\n    .filter(i => !recentIndices.includes(i));\n  \n  // \u5982\u679C\u6240\u6709\u56FE\u7247\u90FD\u5728\u6700\u8FD1\u5217\u8868\u4E2D\uFF0C\u6E05\u7A7A\u5217\u8868\u91CD\u65B0\u5F00\u59CB\n  if (availableIndices.length === 0) {\n    recentIndices.length = 0;\n    availableIndices = Array.from({ length: IMAGES.length }, (_, i) => i);\n  }\n  \n  const randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];\n  recentIndices.push(randomIndex);\n  \n  // \u4FDD\u6301\u6700\u8FD1\u5217\u8868\u957F\u5EA6\u4E3A UNIQUE_COUNT\n  if (recentIndices.length > UNIQUE_COUNT) {\n    recentIndices.shift();\n  }\n  \n  return randomIndex;\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    // \u5141\u8BB8\u8DE8\u57DF\u8BBF\u95EE\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET',\n      'Access-Control-Allow-Headers': 'Content-Type',\n      'Vary': 'Accept, Accept-Encoding', // \u6DFB\u52A0 Vary \u5934\uFF0C\u544A\u8BC9\u6D4F\u89C8\u5668\u8FD9\u662F\u52A8\u6001\u5185\u5BB9\n    };\n\n    // \u5904\u7406\u9884\u68C0\u8BF7\u6C42\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers });\n    }\n\n    try {\n      // \u6839\u636E\u6A21\u5F0F\u9009\u62E9\u56FE\u7247\u7D22\u5F15\n      const index = MODE === 1 ? getNextSequentialIndex() : getUniqueRandomIndex();\n      const imageUrl = IMAGES[index];\n\n      // \u83B7\u53D6\u56FE\u7247\u5185\u5BB9\n      const response = await fetch(imageUrl);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch image: ${response.status} ${response.statusText}`);\n      }\n\n      // \u8BBE\u7F6E\u6B63\u786E\u7684Content-Type\n      let contentType = response.headers.get('Content-Type');\n      if (imageUrl.endsWith('.jpg') || imageUrl.endsWith('jpeg')) {\n        contentType = 'image/jpeg';\n      } else if (imageUrl.endsWith('.png')) {\n        contentType = 'image/png';\n      } else if (imageUrl.endsWith('jpg')) {\n        contentType = 'image/jpeg';\n      }\n\n      // \u751F\u6210\u968F\u673A\u6807\u8BC6\u7B26\n      const randomId = Math.random().toString(36).substring(7);\n\n      // \u8FD4\u56DE\u56FE\u7247\uFF0C\u5E76\u8BBE\u7F6E\u7F13\u5B58\u63A7\u5236\n      return new Response(response.body, {\n        headers: {\n          ...headers,\n          'Content-Type': contentType || 'image/jpeg',\n          'Cache-Control': 'no-store, must-revalidate', // \u7981\u7528\u7F13\u5B58\n          'Pragma': 'no-cache',\n          'Expires': '0',\n          'Content-Disposition': 'inline',\n          'Last-Modified': new Date().toUTCString(), // \u6DFB\u52A0\u52A8\u6001\u65F6\u95F4\u6233\n          'ETag': `\"${randomId}\"`, // \u4F7F\u7528\u968F\u673A\u6807\u8BC6\u7B26\n        },\n      });\n    } catch (error) {\n      console.error('Error details:', error);\n      return new Response(JSON.stringify({ \n        error: error.message,\n        url: error.url,\n        stack: error.stack\n      }, null, 2), {\n        status: 500,\n        headers: {\n          ...headers,\n          'Content-Type': 'application/json',\n        },\n      });\n    }\n  },\n}; "],
  "mappings": "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",
  "names": []
}
